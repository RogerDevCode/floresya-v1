name: OpenAPI Contract Automation

on:
  push:
    paths:
      - 'api/**/*.js'
      - 'scripts/generate-openapi-spec.js'
      - 'scripts/validate-contract-ci.js'
  pull_request:
    paths:
      - 'api/**/*.js'
      - 'scripts/generate-openapi-spec.js'

jobs:
  validate-contract:
    name: Validate OpenAPI Contract
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate OpenAPI specification
        run: npm run generate:openapi

      - name: Validate contract compliance
        run: npm run validate:contract:ci

      - name: Upload contract artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: openapi-artifacts
          path: |
            api/docs/openapi-spec.json
            api/docs/openapi-spec.yaml
            api/docs/ci-contract-report.json
            api/docs/generation-summary.json
            api/docs/frontend-contract-validation.json
          retention-days: 30

  validate-frontend-contract:
    name: Validate Frontend Contract Compliance
    runs-on: ubuntu-latest
    needs: validate-contract

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate OpenAPI specification
        run: npm run generate:openapi

      - name: Validate frontend against contract
        run: npm run validate:frontend

      - name: Generate API client for frontend
        run: npm run generate:client

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-artifacts
          path: |
            public/js/shared/api-client.js
            public/js/shared/api-types.js
            public/js/shared/API_USAGE.md
            api/docs/frontend-contract-validation.json
          retention-days: 30

  generate-suggestions:
    name: Generate Annotation Suggestions
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate annotation suggestions
        run: npm run suggest:annotations

      - name: Comment PR with suggestions
        uses: actions/github-script@v7
        if: success()
        with:
          script: |
            const fs = require('fs');
            const path = 'api/docs/annotation-suggestions.md';

            if (fs.existsSync(path)) {
              const content = fs.readFileSync(path, 'utf8');
              const lines = content.split('\n').slice(0, 50); // First 50 lines

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## üìù OpenAPI Annotation Suggestions

${lines.join('\n')}

> **Nota:** Revisa y aplica las sugerencias de anotaciones manualmente o usa \`npm run apply:annotations\` localmente.

**Comandos disponibles:**
- \`npm run suggest:annotations\` - Generar nuevas sugerencias
- \`npm run apply:annotations\` - Aplicar sugerencias interactivamente
- \`npm run apply:annotations:auto\` - Aplicar todas autom√°ticamente
- \`npm run generate:openapi\` - Regenerar especificaci√≥n completa
`
              });
            }