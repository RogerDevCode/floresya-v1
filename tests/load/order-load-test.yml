# Artillery Load Test Configuration
# Tests order creation and retrieval under load
config:
  target: 'http://localhost:3000'
  phases:
    # Phase 1: Warm up with 10 users for 30 seconds
    - duration: 30
      arrivalRate: 5
      name: 'Warm up phase'

    # Phase 2: Ramp up to 50 users over 60 seconds
    - duration: 60
      arrivalRate: 10
      rampTo: 50
      name: 'Ramp up load'

    # Phase 3: Sustained load of 100 users for 2 minutes
    - duration: 120
      arrivalRate: 100
      name: 'Sustained load'

    # Phase 4: Spike test - 200 users for 30 seconds
    - duration: 30
      arrivalRate: 200
      name: 'Spike test'

    # Phase 5: Cool down - back to 10 users
    - duration: 30
      arrivalRate: 10
      name: 'Cool down'

  defaults:
    headers:
      Content-Type: 'application/json'

# Health check before starting
before:
  flow:
    - get:
        url: '/health'
        expect:
          - statusCode: 200
          - json:
              success: true

# Load test scenarios
scenarios:
  # Scenario 1: Order creation under load
  - name: 'Create orders under load'
    weight: 60
    flow:
      - post:
          url: '/api/orders'
          json:
            order:
              customer_email: 'loadtest_{{$randomInt(1, 10000)}}@example.com'
              customer_name: 'Load Test Customer {{$randomInt(1, 1000)}}'
              customer_phone: '0414{{$randomInt(1000000, 9999999)}}'
              delivery_address: 'Centro de Caracas, Avenida Bol√≠var, Edificio {{$randomInt(1, 100)}}'
              delivery_city: 'Caracas'
              total_amount_usd: '{{$randomInt(25, 500)}}'
              total_amount_ves: '{{$randomInt(900, 18000)}}'
              currency_rate: 36.00
            items:
              - product_id: '{{$randomInt(1, 10)}}'
                product_name: 'Rosas Premium {{$randomInt(1, 5)}}'
                quantity: '{{$randomInt(1, 5)}}'
                unit_price_usd: '{{$randomInt(10, 50)}}'
                subtotal_usd: '{{$randomInt(10, 250)}}'
          expect:
            - statusCode: [201, 400, 422, 429] # Accept various responses under load
          capture:
            json: '$.requestId'
            as: 'orderRequestId'

  # Scenario 2: Order retrieval under load
  - name: 'Retrieve orders under load'
    weight: 30
    flow:
      - get:
          url: '/api/orders'
          expect:
            - statusCode: [200, 401, 429] # 401 expected without auth, 429 if rate limited
          capture:
            json: '$.timestamp'
            as: 'ordersTimestamp'

  # Scenario 3: Health checks under load
  - name: 'Health checks under load'
    weight: 10
    flow:
      - get:
          url: '/health'
          expect:
            - statusCode: 200
          capture:
            json: '$.data.uptime'
            as: 'uptime'

      - get:
          url: '/health/circuit-breaker'
          expect:
            - statusCode: 200
          capture:
            json: '$.data.database.state'
            as: 'circuitBreakerState'